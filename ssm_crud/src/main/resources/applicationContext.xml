<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- spring的配置文件，主要配置和业务逻辑有关的 ,与mybatis的整合等-->
	<!-- 数据源：(连接数据库) ，事务控制，，xxx 核心业务逻辑组件 -->
	
	<!-- 增加扫描器，不扫描控制器 -->
	<context:component-scan base-package="com.su"  use-default-filters="false" >
	<!-- 让spring不扫描控制器 -->
	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	
	<!-- 数据源， context:property-placeholder ，加载数据库的文件-->
	<context:property-placeholder location="classpath:dbconfig.properties"/>
	<bean id="comboPooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"><!--配置数据库连接池 -->
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property><!-- 要连接的数据可 -->
		<property name="driverClass" value="${jdbc.driver}"></property><!-- 数据库驱动 -->
		<property name="user" value="${jdbc.user}"></property>		<!-- 用户名 -->
		<property name="password" value="${jdbc.password}"></property>	<!-- 密码 -->
	</bean>
	
	
	<!-- 配置与mybatis的整合 -->
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		
		<!-- 指定mybaits的全局配置文件的位置 -->
		<property name="configLocation" value=""></property>
		
		<!-- 数据源 -->
		<property name="dataSource" ref="comboPooledDataSource"></property>
		
		<!-- mybatis映射文件的位置 -->
		<property name="mapperLocations" value="classpath:mapper/*xml"></property>
	</bean>
	
	
	<!-- 配置扫描器，将mybatis的接口的实现加入到Ioc -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	
	<!-- 扫面所有的dao接口的实现，加入到ioc容器，动态代理的方式，调用接口的映射等，，之前学的 -->
	<property name="basePackage" value="com.su.crud.dao"></property>
	</bean>
	
	<!-- 配置事务控制 -->
	<bean  id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 控制事务就是管理数据源 -->
		<property name="dataSource" ref="comboPooledDataSource"></property>
	</bean>
	
	
	<!-- 配置好事务之后就要开启基于注解的事务，或者基于xml形式的配置方式的事务（本项目使用） -->
	<aop:config>
		<!-- 切入点表达式 -->
		<aop:pointcut expression="execution(* com.su.crud.service..*(..)))" id="txPoint"/>
		<!--                                 *代表返回任意类型。      ..表示该包以及子包下的*任意方法 ，..表示任意多的参数 
												service下的所有方法都来控制事务
		-->
		<!--  配置事务增强 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/><!-- 事务用txAdvice指定的规则切入, 用txPoint指定的方法切入 -->
	</aop:config>
	
	
		<!-- 配置事务增强,即事务如何切入 -->
		<tx:advice id="txAdvice" transaction-manager="transactionManager">
			<tx:attributes>
				<!-- 所有方法都是事务方法 -->
				<tx:method name="*"/>
				<!-- 假如所有的get开始的方法都是只读，可以设置read-only只读 -->
				<tx:method name="get" read-only="true"/>
			</tx:attributes>
		</tx:advice>
	
</beans>
